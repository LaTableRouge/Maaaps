// -----------------------------------------------------------------------------
// This file contains very basic styles.
// -----------------------------------------------------------------------------

//
// Make all elements from the DOM inherit from the parent box-sizing
// Since `*` has a specificity of 0, it does not override the `html` value
// making all elements inheriting from the root box-sizing value
// See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
//

& {
  *,
  *::before,
  *::after {
    box-sizing: inherit;
  }

  display: grid;
  position: relative;
  overflow: hidden;
  container-type: inline-size;
  container-name: maaaps;

  .responsive-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    width: 100%;
    height: var(--mobile-height, 100svh);
    overflow: hidden;

    @include container-breakpoint-up(maaaps, #{$mobile-breakpoint}) {
      grid-template-areas: 'sidebar map';
      grid-template-columns: auto 1fr;
      height: initial;
      max-height: var(--max-height);
      aspect-ratio: inherit;
    }

    // Aspect ratio handle because it's fucked up
    &:not(:has([style*='aspect-ratio'])) {
      @include container-breakpoint-up(maaaps, #{$mobile-breakpoint}) {
        aspect-ratio: var(--base-aspect-ratio);
      }
    }

    &[style*='aspect-ratio: auto;'],
    &[style*='aspect-ratio:auto;'] {
      @include container-breakpoint-up(maaaps, #{$mobile-breakpoint}) {
        aspect-ratio: var(--base-aspect-ratio) !important;
      }
    }
  }
}
